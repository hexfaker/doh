name: build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:
    env:
      POETRY_ACTIVATE_PATH: ".local/share/pypoetry/venv/bin/activate"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4.2.0
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: make download-poetry

    - name: Set up cache
      uses: actions/cache@v3.0.11
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('pyproject.toml') }}-${{ hashFiles('poetry.lock') }}
    - name: Install dependencies
      run: |
        source "${HOME}/${POETRY_ACTIVATE_PATH}"
        poetry config virtualenvs.in-project true
        poetry install

    - name: Run safety checks
      run: |
        source "${HOME}/${POETRY_ACTIVATE_PATH}"
        STRICT=1 make check-safety

    - name: Run style checks
      run: |
        source "${HOME}/${POETRY_ACTIVATE_PATH}"
        STRICT=1 make check-style

    - name: Run tests
      run: |
        source "${HOME}/${POETRY_ACTIVATE_PATH}"
        make test
